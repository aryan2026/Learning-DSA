
#include <iostream>
using namespace std;

int partition(int arr[], int l, int h)
{

	int pivot = arr[l];

	int count = 0;
	for (int i = l + 1; i <= h; i++) {
		if (arr[i] <= pivot)
			count++;
	}

	int pivotIndex = l + count;
	swap(arr[pivotIndex], arr[l]);


	int i = l, j = h;

	while (i < pivotIndex && j > pivotIndex) {

		while (arr[i] <= pivot) {
			i++;
		}

		while (arr[j] > pivot) {
			j--;
		}

		if (i < pivotIndex && j > pivotIndex) {
			swap(arr[i++], arr[j--]);
		}
	}

	return pivotIndex;
}

void quickSort(int arr[], int l, int h)
{

	// base case
	if (l >= h)
		return;

	int p = partition(arr, l, h);

	quickSort(arr, l, p - 1);

	quickSort(arr, p + 1, h);
}

int main()
{

	int arr[] = { 90, 30, 40, 20, 10, 11 };
	int n = 6;

	quickSort(arr, 0, n - 1);

	for (int i = 0; i < n; i++) {
		cout << arr[i] << " ";
	}

	return 0;
}
